from email.policy import default
from odoo import models, fields, api
from odoo.exceptions import ValidationError
from datetime import datetime

# refrsh

class UserModel(models.Model):
    _name = "enter.user_model"
    _description = "User Model"
    _sql_constraints=[('username_unique_ref', 'UNIQUE(username)', 'Username must be unique') ]

    name = fields.Char("Name", default="Juan", required=True)
    surname = fields.Char("Surname", required=True)
    username = fields.Char("Username", required=True, default="Juan123", index=True)
    age = fields.Integer("Age", index=True)

    icon = fields.Binary("Icon", help="Profile icon of the user")

    password = fields.Char("Password", compute="_generate_password", store=True, help="Autogenerated Password")

    game_rental_ids = fields.One2many("enter.game_rental_model", "user_id", string = "Games")
    book_rental_ids = fields.One2many("enter.book_rental_model", "user_id", string = "Books")
    film_rental_ids = fields.One2many("enter.film_rental_model", "user_id", string = "Films")

    rental_count = fields.Integer("Rental Count", compute="_compute_rental_count", store=True)

    state = fields.Selection(string="State", selection=[("N", "Not validated"), ("V", "Validated")], default="N")

    def validate(self):
        self.state = "V"

    @api.depends("username", "name")
    def _generate_password(self):
        hash = self.username.__hash__()
        hash ^= datetime.now().__hash__()
        self.password = self.name + str(abs(hash & 0xFFFFFFFF))

    @api.depends("game_rental_ids", "book_rental_ids", "film_rental_ids")
    def _compute_rental_count(self):

        count = 0

        for r in self.game_rental_ids:
            if r.user_id.username == self.username:
                count += 1

        for r in self.book_rental_ids:
            if r.user_id.username == self.username:
                count += 1

        for r in self.film_rental_ids:
            if r.user_id.username == self.username:
                count += 1

        self.rental_count = count
